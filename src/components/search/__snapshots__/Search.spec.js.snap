// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    handleSubmit={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Form
        className=""
        inline={true}
        onSubmit={[Function]}
>
        <legend>
                Flight search
        </legend>
        <_class
                className=""
                floatingLabel={false}
                hint={null}
                invalid={false}
                label="From"
                placeholder="From"
                required={true}
                type="text"
        />
        <_class
                className=""
                floatingLabel={false}
                hint={null}
                invalid={false}
                label="To"
                placeholder="To"
                required={true}
                type="text"
        />
        <_class
                className=""
                floatingLabel={false}
                hint={null}
                invalid={false}
                label="Date"
                required={true}
                type="date"
        />
        <Button
                className=""
                color="default"
                size="default"
                variant="raised"
        >
                Submit
        </Button>
</Form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <legend>
            Flight search
</legend>,
          <_class
            className=""
            floatingLabel={false}
            hint={null}
            invalid={false}
            label="From"
            placeholder="From"
            required={true}
            type="text"
/>,
          <_class
            className=""
            floatingLabel={false}
            hint={null}
            invalid={false}
            label="To"
            placeholder="To"
            required={true}
            type="text"
/>,
          <_class
            className=""
            floatingLabel={false}
            hint={null}
            invalid={false}
            label="Date"
            required={true}
            type="date"
/>,
          <Button
            className=""
            color="default"
            size="default"
            variant="raised"
>
            Submit
</Button>,
        ],
        "className": "",
        "inline": true,
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Flight search",
          },
          "ref": null,
          "rendered": "Flight search",
          "type": "legend",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "",
            "floatingLabel": false,
            "hint": null,
            "invalid": false,
            "label": "From",
            "placeholder": "From",
            "required": true,
            "type": "text",
          },
          "ref": [Function],
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "",
            "floatingLabel": false,
            "hint": null,
            "invalid": false,
            "label": "To",
            "placeholder": "To",
            "required": true,
            "type": "text",
          },
          "ref": [Function],
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "",
            "floatingLabel": false,
            "hint": null,
            "invalid": false,
            "label": "Date",
            "required": true,
            "type": "date",
          },
          "ref": [Function],
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Submit",
            "className": "",
            "color": "default",
            "size": "default",
            "variant": "raised",
          },
          "ref": null,
          "rendered": "Submit",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Form
          className=""
          inline={true}
          onSubmit={[Function]}
>
          <legend>
                    Flight search
          </legend>
          <_class
                    className=""
                    floatingLabel={false}
                    hint={null}
                    invalid={false}
                    label="From"
                    placeholder="From"
                    required={true}
                    type="text"
          />
          <_class
                    className=""
                    floatingLabel={false}
                    hint={null}
                    invalid={false}
                    label="To"
                    placeholder="To"
                    required={true}
                    type="text"
          />
          <_class
                    className=""
                    floatingLabel={false}
                    hint={null}
                    invalid={false}
                    label="Date"
                    required={true}
                    type="date"
          />
          <Button
                    className=""
                    color="default"
                    size="default"
                    variant="raised"
          >
                    Submit
          </Button>
</Form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <legend>
              Flight search
</legend>,
            <_class
              className=""
              floatingLabel={false}
              hint={null}
              invalid={false}
              label="From"
              placeholder="From"
              required={true}
              type="text"
/>,
            <_class
              className=""
              floatingLabel={false}
              hint={null}
              invalid={false}
              label="To"
              placeholder="To"
              required={true}
              type="text"
/>,
            <_class
              className=""
              floatingLabel={false}
              hint={null}
              invalid={false}
              label="Date"
              required={true}
              type="date"
/>,
            <Button
              className=""
              color="default"
              size="default"
              variant="raised"
>
              Submit
</Button>,
          ],
          "className": "",
          "inline": true,
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Flight search",
            },
            "ref": null,
            "rendered": "Flight search",
            "type": "legend",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "floatingLabel": false,
              "hint": null,
              "invalid": false,
              "label": "From",
              "placeholder": "From",
              "required": true,
              "type": "text",
            },
            "ref": [Function],
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "floatingLabel": false,
              "hint": null,
              "invalid": false,
              "label": "To",
              "placeholder": "To",
              "required": true,
              "type": "text",
            },
            "ref": [Function],
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "floatingLabel": false,
              "hint": null,
              "invalid": false,
              "label": "Date",
              "required": true,
              "type": "date",
            },
            "ref": [Function],
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Submit",
              "className": "",
              "color": "default",
              "size": "default",
              "variant": "raised",
            },
            "ref": null,
            "rendered": "Submit",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
